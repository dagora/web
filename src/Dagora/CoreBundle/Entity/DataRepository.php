<?php

namespace Dagora\CoreBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\AbstractQuery;

/**
 * DataRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DataRepository extends EntityRepository
{
    /**
     * Return a Data
     *
     * @param array $params
     *      - int $id
     *
     * @return Data
     */
    public function findOneBy(array $params)
    {
        return $this->_em->createQuery('SELECT d
            FROM Dagora\CoreBundle\Entity\Data d
            WHERE d.id = :id')
            ->setParameter('id', $params['id'])
            ->getOneOrNullResult(AbstractQuery::HYDRATE_OBJECT);
    }

    /**
     * Count the number of total results
     *
     * @param array $params
     * @return int
     */
    public function count($params) {

        $commonData = $this->setFindAllByCommonConditions($params);

        // no results
        if ( $commonData == -1 ) return array();

        $conditions = $commonData['conditions'];
        $values     = $commonData['values'];

        // get count
        $extraSql = count($conditions) ? 'WHERE ' .  join(' AND ', $conditions) : '';
        return $this->_em->createQuery('SELECT count(d) FROM Dagora\CoreBundle\Entity\Data d ' . $extraSql)
                ->setParameters($values)
                ->getSingleScalarResult();
    }

    /**
     * Return Datas
     *
     * @param array $params
     * @return Datas[]
     */
    public function findAllBy($params)
    {
        // set start and limit
        if ( !isset($params['start']) ) $params['start'] = 0;
        if ( !isset($params['num']) ) $params['num'] = 20;

        $commonData = $this->setFindAllByCommonConditions($params);

        // no results
        if ( $commonData == -1 ) return array();

        $conditions = $commonData['conditions'];
        $values     = $commonData['values'];

        // set order
        $order = '';

        if ( isset($params['order']) ) {

            if ( 'asc' == $params['order'] ) {
                $order = 'ORDER BY d.date asc';
            }
            else if ( 'desc' == $params['order'] ) {
                $order = 'ORDER BY d.date desc';
            }
        }

        // get results
        $extraSql = count($conditions) ? 'WHERE ' .  join(' AND ', $conditions) : '';

        $q = $this->_em
            ->createQuery('SELECT d
                FROM Dagora\CoreBundle\Entity\Data d '
                . $extraSql . ' '
                . $order)
            ->setParameters($values);

        // we have already made the limit on the previous query
        if ( !isset($values['ids']) ) {
            $q->setFirstResult($params['start'])
              ->setMaxResults($params['num']);
        }

        return $q->setHint(\Doctrine\ORM\Query::HINT_INCLUDE_META_COLUMNS, TRUE)
                 ->getResult(AbstractQuery::HYDRATE_OBJECT);
    }

    /**
     * Private function that sets the common conditions
     *
     * @param array $params
     * @return array
     */
    private function setFindAllByCommonConditions($params)
    {
        $conditions = $values = array();

        // get with ids
        if ( isset($params['source_id']) ) {
            $conditions[]  = "d.source IN (:ids)";
            $values['ids'] = $params['source_id'];
        }

        return array('conditions' => $conditions, 'values' => $values);
    }

}